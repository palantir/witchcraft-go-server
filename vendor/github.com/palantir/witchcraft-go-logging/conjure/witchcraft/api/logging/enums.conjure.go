// This file was generated by Conjure and should not be manually edited.

package logging

import (
	"strings"
)

type AuditResult string

const (
	AuditResultSuccess      AuditResult = "SUCCESS"
	AuditResultUnauthorized AuditResult = "UNAUTHORIZED"
	AuditResultError        AuditResult = "ERROR"
	AuditResultUnknown      AuditResult = "UNKNOWN"
)

func (e *AuditResult) UnmarshalText(data []byte) error {
	switch strings.ToUpper(string(data)) {
	default:
		*e = AuditResultUnknown
	case "SUCCESS":
		*e = AuditResultSuccess
	case "UNAUTHORIZED":
		*e = AuditResultUnauthorized
	case "ERROR":
		*e = AuditResultError
	}
	return nil
}

type LogLevel string

const (
	LogLevelFatal   LogLevel = "FATAL"
	LogLevelError   LogLevel = "ERROR"
	LogLevelWarn    LogLevel = "WARN"
	LogLevelInfo    LogLevel = "INFO"
	LogLevelDebug   LogLevel = "DEBUG"
	LogLevelTrace   LogLevel = "TRACE"
	LogLevelUnknown LogLevel = "UNKNOWN"
)

func (e *LogLevel) UnmarshalText(data []byte) error {
	switch strings.ToUpper(string(data)) {
	default:
		*e = LogLevelUnknown
	case "FATAL":
		*e = LogLevelFatal
	case "ERROR":
		*e = LogLevelError
	case "WARN":
		*e = LogLevelWarn
	case "INFO":
		*e = LogLevelInfo
	case "DEBUG":
		*e = LogLevelDebug
	case "TRACE":
		*e = LogLevelTrace
	}
	return nil
}
